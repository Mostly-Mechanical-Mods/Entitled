window = {
	visible = "[GetVariableSystem.HasValue('Entitled','title')]"
	name = "Entitled_custom_title"
	widgetid = "Entitled_custom_title"
	layer = windows_layer
	movable = no

	using = Window_Size_Sidebar
	using = Window_Background_Sidebar

	state = {
		name = _show
		using = Animation_FadeIn_Quick
		using = Sound_WindowShow_Standard

		position = { 0 0 }
	}

	state = {
		name = _hide
		using = Animation_FadeOut_Quick
		using = Sound_WindowHide_Standard
		position = { -90 0 }
	}

	state = {
		name = "refresh_religion_mapmode"
		delay = 0.1
		trigger_when = "[IsMapMode('religions')]"
		on_start = "[SetMapMode('religions')]"
	}

	state = {
		name = "refresh_culture_mapmode"
		# delay = 0.1
		trigger_when = "[IsMapMode('cultures')]"
		on_finish = "[SetMapMode('cultures')]"
		# on_finish = "[GetScriptedGui('refreh_culture_mapmode').Execute(GuiScope.SetRoot).End)]"
	}

	margin_widget = {
		size = { 100% 100% }
		margin = { 0 5 }
		margin_right = 100

		
	}
	vbox = {
		using = Window_Margins_Sidebar

		entitled_header_pattern = {
			visible = "[GetVariableSystem.HasValue('Entitled_title_window','create_title')]"
			# visible = "[Not(GetPlayer.IsValid)]"
			blockoverride "header_text"
			{
				text = "ENTITLED_WINDOW_TITLE"
			}
		}

		entitled_header_pattern = {
			visible = "[GetVariableSystem.HasValue('Entitled_title_window','convert_faith')]"
			blockoverride "header_text"
			{
				text = "ENTITLED_WINDOW_TITLE_CONVERT_FAITH"
			}
		}

		entitled_header_pattern = {
			visible = "[GetVariableSystem.HasValue('Entitled_title_window','convert_culture')]"
			blockoverride "header_text"
			{
				text = "ENTITLED_WINDOW_TITLE_CONVERT_CULTURE"
			}
		}

		# header_with_picture = {
		# 	name = "header"
		# 	datacontext = "[GetIllustration( 'religion_interior' )]"
		# 	datacontext = "[GetGlobalVariable('entitled_pinned_faith').Faith]"
		# 	size = { 0 130 }
		# 	layoutpolicy_horizontal = expanding
		# 	layoutpolicy_vertical = fixed

		# 	blockoverride "size" {
		# 		size = { 100% 143 }
		# 	}

		# 	blockoverride "header_text"
		# 	{
		# 		text = "FAITH_VIEW_HEADING"
		# 		using = tooltip_es

		# 		state = {
		# 			name = "faith_view_refresh"
		# 			using = Animation_Refresh_FadeOut
		# 		}

		# 		state = {
		# 			using = Animation_Refresh_FadeIn
		# 		}
		# 	}

		# 	blockoverride "button_close"
		# 	{
		# 		onclick = "[GetVariableSystem.Clear('Entitled')]"
		# 	}

		# 	blockoverride "button_back"
		# 	{
		# 		visible = "[HasViewHistory]"
		# 		onclick = "[OpenFromViewHistory]"
		# 		tooltip = "[GetViewHistoryTooltip]"
		# 	}

		# 	blockoverride "button_me"
		# 	{
		# 		visible = "[GetPlayer.IsValid]"
		# 		# onclick = "[DefaultOnCharacterClick(GetPlayer.GetID)]"
		# 	}

		# 	blockoverride "illustration_texture"
		# 	{
		# 		texture = "[Illustration.GetTexture( Faith.MakeScope )]"
		# 		spriteType = stretched
		# 		fittype = centercrop
		# 		alpha = 0.35
		# 	}

		# 	hbox = {
		# 		# datacontext = "[FaithWindow.GetFaith]"

		# 		watch_window_button = {
		# 			size = { 60 40 }
		# 			onclick = "[AddWatchWindow( Faith.MakeScope )]"
		# 		}

		# 		vbox = {
		# 			margin_top = 30
		# 			margin_left = 10

		# 			icon = {
		# 				name = "faith_icon"
		# 				size = { 100 100 }
		# 				texture = "[Faith.GetIcon]"
		# 				using = tooltip_se
		# 				tooltipwidget = {
		# 					faith_tooltip = {}
		# 				}

		# 				state = {
		# 					name = "faith_view_refresh"
		# 					using = Animation_Refresh_FadeOut
		# 				}

		# 				state = {
		# 					using = Animation_Refresh_FadeIn
		# 				}
		# 			}
		# 		}

		# 		vbox = {
		# 			layoutpolicy_horizontal = expanding
		# 			layoutpolicy_vertical = expanding

		# 			expand = {}

		# 			# hbox = {
		# 			# 	layoutpolicy_horizontal = expanding

		# 			# 	expand = {}

		# 			# 	vbox = {
		# 			# 		layoutpolicy_vertical = expanding
		# 			# 		margin_bottom = 4
		# 			# 		margin_left = 25
		# 			# 		spacing = 1

		# 			# 		text_single = {
		# 			# 			name = "your_faith"
		# 			# 			visible = "[ObjectsEqual( GetPlayer.GetFaith, Faith.Self )]"
		# 			# 			text = "FAITH_VIEW_YOUR_FAITH"
		# 			# 			align = nobaseline|center
		# 			# 		}

		# 			# 		expand = {}

		# 			# 		text_single = {
		# 			# 			name = "our_view"
		# 			# 			visible = "[Not(ObjectsEqual( GetPlayer.GetFaith, Faith.Self ))]"
		# 			# 			layoutpolicy_horizontal = expanding
		# 			# 			text = "FAITH_VIEW_OUR_VIEW"
		# 			# 			align = nobaseline|center
		# 			# 		}

		# 			# 		text_single = {
		# 			# 			name = "their_view"
		# 			# 			visible = "[Not(ObjectsEqual( GetPlayer.GetFaith, Faith.Self ))]"
		# 			# 			layoutpolicy_horizontal = expanding
		# 			# 			text = "FAITH_VIEW_THEIR_VIEW"
		# 			# 			align = nobaseline|center
		# 			# 		}
		# 			# 	}

		# 			# 	expand = {}

		# 			# 	vbox = {
		# 			# 		margin = { 10 0 }
		# 			# 		spacing = 2

		# 			# 		fervor_container_vbox = {}

		# 			# 		button_sidepanel_right = {
		# 			# 			name = "religion_information"
		# 			# 			datacontext = "[Faith.GetReligion]"
		# 			# 			# onclick = "[FaithWindow.ToggleReligionWindow]"
		# 			# 			tooltip = "TOGGLE_RELIGION_VIEW_TOOLTIP"

		# 			# 			using = tooltip_nw

		# 			# 			blockoverride "button_text"
		# 			# 			{
		# 			# 				text = "TOGGLE_RELIGION_VIEW"
		# 			# 			}
		# 			# 		}
		# 			# 	}
		# 			# }
		# 		}
		# 	}

		# 	text_single = {
		# 		visible = "[And( Not( Faith.GetReligion.HasPaganRoots ), Not( Faith.IsUnreformed ) )]"
		# 		text = "FAITH_VIEW_SUBHEADING"
		# 		align = center
		# 		parentanchor = top|hcenter
		# 		position = {0 40}
		# 		alpha = 0.9
		# 	}

		# 	text_label_center = {
		# 		visible = "[Faith.IsUnreformed]"
		# 		text = "FAITH_VIEW_UNREFORMED_SUBHEADING"
		# 		align = center
		# 		parentanchor = top|hcenter
		# 		position = {0 40}
		# 		alpha = 0.8
		# 	}

		# 	text_label_center = {
		# 		visible = "[And( Faith.GetReligion.HasPaganRoots, Not( Faith.IsUnreformed ) )]"
		# 		text = "FAITH_VIEW_REFORMED_SUBHEADING"
		# 		align = center
		# 		parentanchor = top|hcenter
		# 		position = {0 40}
		# 		alpha = 0.8
		# 	}
		# }

		spacing = 5
		hbox = {
			layoutpolicy_horizontal = expanding
			margin_right = 10
			expand = {}
		}

		vbox = {
			spacing = 5
			visible = "[GetVariableSystem.HasValue('Entitled_title_window','create_title')]"
			layoutpolicy_horizontal = expanding
			hbox = {
				layoutpolicy_horizontal = expanding
				button_standard = {
					margin_left = 30
					size = { 130 40 }
					icon = {
						size = { 30 30 }
						position = { 5 0 }
						alwaystransparent = yes
						parentanchor = left
						frame = 6
						framesize = { 28 20 }
						texture = "gfx/interface/coat_of_arms/crown_strip_44.dds"
					}
					text = "empire"
					onclick = "[GetVariableSystem.Set('title_rank','empire')]"
					onclick = "[GetScriptedGui('entitled_set_rank').Execute(GuiScope.AddScope('rank',MakeScopeFlag(GetVariableSystem.Get('title_rank'))).End)]"
					# onclick = "[GetScriptedGui('entitled_set_liege').Execute(GuiScope.End)]"
					down = "[GetVariableSystem.HasValue('title_rank','empire')]"
				}
				button_standard = {	
					margin_left = 30	
					size = { 130 40 }
					icon = {
						size = { 30 30 }
						position = { 5 0 }
						alwaystransparent = yes
						parentanchor = left
						frame = 5
						framesize = { 28 20 }
						texture = "gfx/interface/coat_of_arms/crown_strip_44.dds"
					}
					text = "kingdom"
					onclick = "[GetVariableSystem.Set('title_rank','kingdom')]"
					onclick = "[GetScriptedGui('entitled_set_rank').Execute(GuiScope.AddScope('rank',MakeScopeFlag(GetVariableSystem.Get('title_rank'))).End)]"
					# onclick = "[GetScriptedGui('entitled_set_liege').Execute(GuiScope.End)]"
					down = "[GetVariableSystem.HasValue('title_rank','kingdom')]"
				}
				button_standard = {
					margin_left = 30
					size = { 130 40 }	
					icon = {
						size = { 30 30 }
						position = { 5 0 }
						alwaystransparent = yes
						parentanchor = left
						frame = 4
						framesize = { 28 20 }
						texture = "gfx/interface/coat_of_arms/crown_strip_44.dds"
					}
					text = "duchy"
					onclick = "[GetVariableSystem.Set('title_rank','duchy')]"
					onclick = "[GetScriptedGui('entitled_set_rank').Execute(GuiScope.AddScope('rank',MakeScopeFlag(GetVariableSystem.Get('title_rank'))).End)]"
					# onclick = "[GetScriptedGui('entitled_set_liege').Execute(GuiScope.End)]"
					down = "[GetVariableSystem.HasValue('title_rank','duchy')]"
				}
				button_standard = {		
					margin_left = 30
					size = { 130 40 }
					icon = {
						size = { 30 30 }
						position = { 5 0 }
						alwaystransparent = yes
						parentanchor = left
						frame = 3
						framesize = { 28 20 }
						texture = "gfx/interface/coat_of_arms/crown_strip_44.dds"
					}
					text = "county"
					onclick = "[GetVariableSystem.Set('title_rank','county')]"
					onclick = "[GetScriptedGui('entitled_set_rank').Execute(GuiScope.AddScope('rank',MakeScopeFlag(GetVariableSystem.Get('title_rank'))).End)]"
					# onclick = "[GetScriptedGui('entitled_set_liege').Execute(GuiScope.End)]"
					down = "[GetVariableSystem.HasValue('title_rank','county')]"
				}
			}
			hbox = {
				spacing = 5
				layoutpolicy_horizontal = expanding
				margin_left = 0
				margin_right = 20
				button_icon = {
					size = { 20 20 }
					texture = "gfx/interface/icons/flat_icons/cancel.dds"
					onclick = "[GetScriptedGui('entitled_de_jure_liege_remove').Execute(GuiScope.End)]"
					tooltipwidget = entitled_de_jure_liege_remove_tooltip
				}
				button_icon = {
					size = { 20 20 }
					enabled = "[GetScriptedGui('entitled_de_jure_liege_custom').IsValid(GuiScope.End)]"
					# tooltip = "[GetScriptedGui('entitled_de_jure_liege_custom').BuildTooltip(GuiScope.End)]"
					tooltipwidget = entitled_de_jure_liege_custom_tooltip
					texture = "gfx/interface/icons/flat_icons/paste.dds"
					onclick = "[GetScriptedGui('entitled_de_jure_liege_custom').Execute(GuiScope.End)]"
				}
				button_icon = {
					size = { 20 20 }
					texture = "gfx/interface/icons/flat_icons/menu.dds"
					enabled = "[GetScriptedGui('entitled_de_jure_liege_auto').IsValid(GuiScope.End)]"
					onclick = "[GetScriptedGui('entitled_de_jure_liege_auto').Execute(GuiScope.End)]"
					down = "[GetScriptedGui('entitled_de_jure_liege_auto').IsShown(GuiScope.End)]"
					tooltipwidget = entitled_de_jure_liege_auto_tooltip
				}
				text_single = {
					# visible = "[And(GetVariableSystem.Exists('title_rank'),GetGlobalVariable('capital_county').IsSet)]"
					text = "ENTITLED_DE_JURE_LIEGE"
				}
				text_single = {
					visible = "[EqualTo_string(GetGlobalVariable('entitled_de_jure_liege_display').GetFlagName,'reset')]"
					text = ENTITLED_DE_JURE_LIEGE_AUTO_PICK
				}
				text_single = {
					visible = "[EqualTo_string(GetGlobalVariable('entitled_de_jure_liege_display').GetFlagName,'custom')]"
					text = ENTITLED_DE_JURE_LIEGE_CUSTOM_AVAILABLE
				}
				text_single = {
					visible = "[EqualTo_string(GetGlobalVariable('entitled_de_jure_liege_display').GetFlagName,'remove')]"
					text = ENTITLED_DE_JURE_LIEGE_REMOVE_TEXT
				}
				expand = {}
			}
			# hbox = {
			# 	spacing = 5
			# 	layoutpolicy_horizontal = expanding
			# 	margin_left = 0
			# 	margin_right = 20
			# 	button_icon = {
			# 		size = { 20 20 }
			# 		texture = "gfx/interface/icons/flat_icons/cancel.dds"
			# 		onclick = "[GetScriptedGui('entitled_remove_de_facto_liege').Execute(GuiScope.End)]"
			# 		tooltip = ENTITLED_DE_FACTO_LIEGE_REMOVE
			# 	}
			# 	button_icon = {
			# 		size = { 20 20 }
			# 		enabled = "[GetScriptedGui('entitled_set_de_facto_liege').IsValid(GuiScope.End)]"
			# 		tooltip = "[GetScriptedGui('entitled_set_de_facto_liege').BuildTooltip(GuiScope.End)]"
			# 		texture = "gfx/interface/icons/flat_icons/paste.dds"
			# 		tooltip = ENTITLED_DE_JURE_LIEGE_CUSTOM_TOOLTIP
			# 		onclick = "[GetScriptedGui('entitled_set_de_facto_liege').Execute(GuiScope.End)]"
			# 	}
			# 	button_icon = {
			# 		size = { 20 20 }
			# 		texture = "gfx/interface/icons/flat_icons/menu.dds"
			# 		onclick = "[GetScriptedGui('entitled_reset_de_facto_liege').Execute(GuiScope.SetRoot(GetGlobalVariable('capital_county').Title.MakeScope).AddScope('rank',MakeScopeFlag(GetVariableSystem.Get('title_rank'))).End)]"
			# 		tooltip = ENTITLED_DE_FACTO_LIEGE_AUTO_TOOLTIP
			# 	}
			# 	text_single = {
			# 		# visible = "[Not(And(GetVariableSystem.Exists('title_rank'),GetGlobalVariable('capital_county').IsSet))]"
			# 		text = "ENTITLED_DE_FACTO_LIEGE"
			# 	}
			# 	text_single = {
			# 		visible = "[And(Not(EqualTo_string(GetGlobalVariable('entitled_de_facto_liege_display').GetFlagName,'remove')),GetGlobalVariable('entitled_de_facto_liege').IsSet)]"
			# 		text = "[GetGlobalVariable('entitled_de_facto_liege').Char.GetName]"
			# 	}
			# 	text_single = {
			# 		visible = "[EqualTo_string(GetGlobalVariable('entitled_de_facto_liege_display').GetFlagName,'remove')]"
			# 		text = ENTITLED_DE_FACTO_LIEGE_REMOVE
			# 	}
			# 	expand = {}
			# }
			hbox = {
				spacing = 5
				layoutpolicy_horizontal = expanding
				margin_left = 0
				margin_right = 20
				button_icon = {
					size = { 20 20 }
					texture = "gfx/interface/icons/flat_icons/cancel.dds"
					onclick = "[GetScriptedGui('entitled_de_facto_liege_remove').Execute(GuiScope.End)]"
					tooltipwidget = entitled_de_facto_liege_remove_tooltip
				}
				button_icon = {
					size = { 20 20 }
					enabled = "[GetScriptedGui('entitled_de_facto_liege_custom').IsValid(GuiScope.End)]"
					# tooltip = "[GetScriptedGui('entitled_set_de_facto_liege').BuildTooltip(GuiScope.End)]"
					tooltipwidget = entitled_de_facto_liege_custom_tooltip
					texture = "gfx/interface/icons/flat_icons/paste.dds"
					onclick = "[GetScriptedGui('entitled_de_facto_liege_custom').Execute(GuiScope.End)]"
				}
				button_icon = {
					size = { 20 20 }
					texture = "gfx/interface/icons/flat_icons/menu.dds"
					enabled = "[GetScriptedGui('entitled_de_facto_liege_auto').IsValid(GuiScope.End)]"
					onclick = "[GetScriptedGui('entitled_de_facto_liege_auto').Execute(GuiScope.End)]"
					down = "[GetScriptedGui('entitled_de_facto_liege_auto').IsShown(GuiScope.End)]"
					tooltipwidget = entitled_de_facto_liege_auto_tooltip
				}
				text_single = {
					# visible = "[And(GetVariableSystem.Exists('title_rank'),GetGlobalVariable('capital_county').IsSet)]"
					text = "ENTITLED_DE_FACTO_LIEGE"
				}
				text_single = {
					visible = "[EqualTo_string(GetGlobalVariable('entitled_de_facto_liege_display').GetFlagName,'reset')]"
					text = ENTITLED_DE_FACTO_LIEGE_AUTO_PICK
				}
				text_single = {
					visible = "[EqualTo_string(GetGlobalVariable('entitled_de_facto_liege_display').GetFlagName,'custom')]"
					text = ENTITLED_DE_FACTO_LIEGE_CUSTOM_AVAILABLE
				}
				text_single = {
					visible = "[EqualTo_string(GetGlobalVariable('entitled_de_facto_liege_display').GetFlagName,'remove')]"
					text = ENTITLED_DE_FACTO_LIEGE_REMOVE_TEXT
				}
				expand = {}
			}
			hbox = {
				layoutpolicy_horizontal = expanding
				margin_left = 75
				margin_right = 20
				spacing = 10
				text_single = {
					text = "ENTITLED_PRIMARY_TITLE"
				}
				text_single = {
					visible = "[Not(GetVariableSystem.Exists('title_rank'))]"
					text = "ENTITLED_CHOSE_RANK"
				}
				text_single = {
					visible = "[And(GetVariableSystem.Exists('title_rank'),Not(GetVariableSystem.HasValue('title_rank','county')))]"
					text = "[GetGlobalVariable(Concatenate('custom_',GetVariableSystem.Get('title_rank'))).Title.GetNameNoTooltip]"
				}
				text_single = {
					visible = "[And(And(GetVariableSystem.Exists('title_rank'),GetVariableSystem.HasValue('title_rank','county')),GetGlobalVariable('capital_county').IsSet)]"
					text = "[GetGlobalVariable('capital_county').Title.GetNameNoTooltip]"
				}
				text_single = {
					visible = "[And(And(GetVariableSystem.Exists('title_rank'),GetVariableSystem.HasValue('title_rank','county')),Not(GetGlobalVariable('capital_county').IsSet))]"
					text = "ENTITLED_CHOSE_CAPITAL_COUNTY"
				}
				expand = {}
				text_single = {
					visible = "[GetGlobalVariable('capital_county').IsSet]"
					text = "ENTITLED_REALM_SIZE"
				}
			}
			hbox = {
				layoutpolicy_horizontal = expanding
				margin_left = 75
				margin_right = 20
				spacing = 10
				text_single = {
					text = "ENTITLED_CAPITAL_COUNTY"
				}
				text_single = {
					visible = "[Not(GetGlobalVariable('capital_county').IsSet)]"
					text = "ENTITLED_CHOSE_CAPITAL_COUNTY"
				}
				text_single = {
					visible = "[GetGlobalVariable('capital_county').IsSet]"
					text = "[GetGlobalVariable('capital_county').Title.GetNameNoTooltip]"
				}
				expand = {}
				text_single = {
					visible = "[GetGlobalVariable('capital_county').IsSet]"
					text = "ENTITLED_DOMAIN_SIZE"
				}
			}
			hbox = {
				layoutpolicy_horizontal = expanding
				margin_left = 25
				margin_right = 20
				spacing = 5
				button_icon = {
					size = { 20 20 }
					enabled = "[GetScriptedGui('entitled_set_faith').IsValid(GuiScope.End)]"
					# tooltip = "[GetScriptedGui('entitled_de_jure_liege_custom').BuildTooltip(GuiScope.End)]"
					tooltip = ENTITLED_FAITH_CUSTOM_TOOLTIP
					texture = "gfx/interface/icons/flat_icons/paste.dds"
					onclick = "[GetScriptedGui('entitled_set_faith').Execute(GuiScope.End)]"
				}
				button_icon = {
					size = { 20 20 }
					texture = "gfx/interface/icons/flat_icons/menu.dds"
					enabled = "[GetGlobalVariable('capital_county').IsSet]"
					onclick = "[GetScriptedGui('entitled_reset_faith').Execute(GuiScope.End)]"
					down = "[GetScriptedGui('entitled_reset_faith').IsShown(GuiScope.End)]"
					tooltip = ENTITLED_FAITH_AUTO_TOOLTIP
				}
				text_single = {
					text = "ENTITLED_FAITH"
				}
				text_single = {
					visible = "[EqualTo_string(GetGlobalVariable('entitled_faith_display').GetFlagName,'reset')]"
					text = "ENTITLED_FAITH_AUTO"
				}
				text_single = {
					visible = "[EqualTo_string(GetGlobalVariable('entitled_faith_display').GetFlagName,'custom')]"
					text = "ENTITLED_FAITH_CUSTOM"
				}
				expand = {}
				
			}
			hbox = {
				layoutpolicy_horizontal = expanding
				margin_left = 25
				margin_right = 20
				spacing = 5
				button_icon = {
					size = { 20 20 }
					enabled = "[GetScriptedGui('entitled_set_culture').IsValid(GuiScope.End)]"
					# tooltip = "[GetScriptedGui('entitled_de_jure_liege_custom').BuildTooltip(GuiScope.End)]"
					tooltip = ENTITLED_CULTURE_CUSTOM_TOOLTIP
					texture = "gfx/interface/icons/flat_icons/paste.dds"
					onclick = "[GetScriptedGui('entitled_set_culture').Execute(GuiScope.End)]"
				}
				button_icon = {
					size = { 20 20 }
					texture = "gfx/interface/icons/flat_icons/menu.dds"
					enabled = "[GetScriptedGui('entitled_reset_culture').IsValid(GuiScope.End)]"
					onclick = "[GetScriptedGui('entitled_reset_culture').Execute(GuiScope.End)]"
					down = "[GetScriptedGui('entitled_reset_culture').IsShown(GuiScope.End)]"
					tooltip = ENTITLED_CULTURE_AUTO_TOOLTIP
				}
				text_single = {
					text = "ENTITLED_CULTURE"
				}
				text_single = {
					visible = "[EqualTo_string(GetGlobalVariable('entitled_culture_display').GetFlagName,'reset')]"
					text = "ENTITLED_CULTURE_AUTO"
				}
				text_single = {
					visible = "[EqualTo_string(GetGlobalVariable('entitled_culture_display').GetFlagName,'custom')]"
					text = "ENTITLED_CULTURE_CUSTOM"
				}
				expand = {}
			}
			spacer = { size = { 0 5 }}
			button_standard = {
				# set_parent_size_to_minimum = yes
				size = { 450 45 }
				visible = "[Not(GetVariableSystem.Exists('title_rank'))]"
				enabled = "[GetPlayer.IsValid]"
				# tooltip = entitled_pick_rank_tooltip
	
				text = "ENTITLED_CREATE_TITLE"
	
				icon = {
					visible = "[And( ShouldPromptForRulerDesigner, LobbyView.CanTryStartRulerDesigning( Character.Self ) )]"
					size = { 100% 100% }
					texture = "gfx/interface/component_masks/mask_fade_circle.dds"
					using = Color_Bright_Yellow
					alpha = 0
				}
	
				button_edit_text = {
					size = { 30 30 }
					parentanchor = left|vcenter
					position = { 5 0 }
					alwaystransparent = yes
				}
			}
			button_standard = {
				# set_parent_size_to_minimum = yes
				size = { 450 45 }
				visible = "[And(GetVariableSystem.Exists('title_rank'),Not(GetGlobalVariable('capital_county').IsSet))]"
				enabled = "[GetPlayer.IsValid]"
				tooltip = entitled_pick_capital_county_tooltip
	
				text = "ENTITLED_CREATE_TITLE"
	
				icon = {
					visible = "[And( ShouldPromptForRulerDesigner, LobbyView.CanTryStartRulerDesigning( Character.Self ) )]"
					size = { 100% 100% }
					texture = "gfx/interface/component_masks/mask_fade_circle.dds"
					using = Color_Bright_Yellow
					alpha = 0
				}
	
				button_edit_text = {
					size = { 30 30 }
					parentanchor = left|vcenter
					position = { 5 0 }
					alwaystransparent = yes
				}
			}
			button_standard = {
				# set_parent_size_to_minimum = yes
				size = { 450 45 }
				visible = "[And(GetVariableSystem.Exists('title_rank'),GetGlobalVariable('capital_county').IsSet)]"
				datacontext = "[GetScriptedGui('Entitled_create_title')]"
				enabled = "[ScriptedGui.IsValid(GuiScope.AddScope('title',GetGlobalVariable(Concatenate('custom_',GetVariableSystem.Get('title_rank'))).Title.MakeScope).End)]"
				# tooltip = "[ScriptedGui.BuildTooltip(GuiScope.SetRoot(GetGlobalVariable(Concatenate('custom_',GetVariableSystem.Get('title_rank'))).Title.MakeScope).AddScope('independent',MakeScopeFlag(GetVariableSystem.Get('Entitled_independent'))).End)]"
				# onclick = "[ScriptedGui.Execute(GuiScope.SetRoot(GetGlobalVariable(Concatenate('custom_',GetVariableSystem.Get('title_rank'))).Title.MakeScope).AddScope('independent',MakeScopeFlag(GetVariableSystem.Get('Entitled_independent'))).End)]"
				# onclick = "[GetVariableSystem.Clear('empire')]"
				# onclick = "[GetVariableSystem.Clear('kingdom')]"
				# onclick = "[GetVariableSystem.Clear('duchy')]"
				# onclick = "[GetVariableSystem.Clear('capital_county')]"
				# onclick = "[GetVariableSystem.Clear('title_rank')]"
				# onclick = "[GetScriptedGui('Entitled_clean').Execute(GuiScope.End)]"
				# onclick = "[GetVariableSystem.Clear('Entitled')]"
				# onclick = "[SetMapMode(  'realms' )]"
				onclick = "[GetVariableSystem.Toggle('entitled_create_title_confirmation')]"
				tooltip = "[GetScriptedGui('Entitled_create_title').ExecuteTooltip(GuiScope.AddScope('title',GetGlobalVariable(Concatenate('custom_',GetVariableSystem.Get('title_rank'))).Title.MakeScope).End)]"
				
				text = "ENTITLED_CREATE_TITLE"
				# text = "[GetGlobalVariable('capital_county').Title.GetCountyData.GetCapital.GetHolding.GetType.GetKey]"
	
				icon = {
					visible = "[And( ShouldPromptForRulerDesigner, LobbyView.CanTryStartRulerDesigning( Character.Self ) )]"
					size = { 100% 100% }
					texture = "gfx/interface/component_masks/mask_fade_circle.dds"
					using = Color_Bright_Yellow
					alpha = 0
				}
	
				button_edit_text = {
					size = { 30 30 }
					parentanchor = left|vcenter
					position = { 5 0 }
					alwaystransparent = yes
				}
				warning_icon = {
					visible = "[EqualTo_string(GetGlobalVariable('capital_county').Title.GetCountyData.GetCapital.GetHolding.GetType.GetKey,'church_holding')]"
					parentanchor = right|vcenter
					tooltip = "ENTITLEMENT_THEOCRATIC_RULER_WARNING"
				}

			}
			spacer = { size = { 0 5 }}
		}

		
		hbox = {
			visible = "[GetVariableSystem.HasValue('Entitled_title_window','convert_faith')]"
			datacontext = "[GetGlobalVariable('entitled_pinned_faith').Faith]"
			layoutpolicy_horizontal = expanding
			margin_left = 20
			spacing = 20
			minimumsize = { 200 70 }
			widget = {
				
				vbox = {
					parentanchor = center
					layoutpolicy_vertical = expanding
					margin_top = 5
					spacing = 5
					text_single = {
						# align = left
						text = "[Faith.GetName]"
					}
					text_single = {
						# align = left
						text = "ENTITLED_FAITH_COUNTY_COUNT"
					}
					expand = {}
				}
				icon = {
					name = "faith_icon"
					size = { 50 50 }
					parentanchor = left|vcenter
					position = { -100 0 }
					texture = "[Faith.GetIcon]"
					using = tooltip_se
					tooltipwidget = {
						faith_tooltip = {}
					}
	
					state = {
						name = "faith_view_refresh"
						using = Animation_Refresh_FadeOut
					}
	
					state = {
						using = Animation_Refresh_FadeIn
					}
				}
			}
		}

		hbox = {
			visible = "[GetVariableSystem.HasValue('Entitled_title_window','convert_culture')]"
			datacontext = "[GetGlobalVariable('entitled_pinned_culture').Culture]"
			layoutpolicy_horizontal = expanding
			margin_left = 20
			spacing = 20
			minimumsize = { 200 70 }
			widget = {
				size = { 200 70 }
				vbox = {
					parentanchor = center
					layoutpolicy_vertical = expanding
					margin_top = 5
					spacing = 5
					text_single = {
						# align = left
						text = "[Culture.GetName]"
					}
					text_single = {
						# align = left
						text = "ENTITLED_CULTURE_COUNTY_COUNT"
					}
					expand = {}
				}
			}
		}

		scrollarea = {
			name = "scrollarea"
			layoutpolicy_horizontal = expanding
			layoutpolicy_vertical = expanding
			# maximumsize = { 600 600 }
			# autoresizescrollarea = yes
			scrollbarpolicy_horizontal = always_off
			# visible = "[Character.HasDifficultyInfo]"

			scrollwidget = {
				layoutpolicy_vertical = expanding
				vbox = {
					layoutpolicy_vertical = expanding
					size = { 100% 100% }
					datamodel = "[GetGlobalList('Entitled_top_de_jure')]"
					item = {
						vbox = {
							name = "empire"
							spacing = 10
							hbox = {
								datacontext = "[Scope.Title]"
								layoutpolicy_horizontal = expanding
								button_group = {
									# onclick = "[CountyGroup.ToggleExpanded]"
									layoutpolicy_horizontal = expanding

									flowcontainer = {
										spacing = 5
										widget = {
											size = { 18 22 }
											button_expand = {
												frame = "[Select_int32( GetVariableSystem.HasValue('empire',Scope.Title.GetKey), '(int32)2', '(int32)1' )]"
												parentanchor = center
											}
										}
									}

									onclick = "[GetVariableSystem.SetOrToggle('empire',Scope.Title.GetKey)]"
								}
								button_multi = {
									name = "custom_title"
									layoutpolicy_horizontal = expanding
									size = { 310 60 }
	
									coa_title_tiny_crown = {
										datacontext = "[Scope.Title]"
									}
									text = "[Scope.Title.GetName]"
									margin = { 60 0 }
									
									onclick = "[GetVariableSystem.SetOrToggle('empire',Scope.Title.GetKey)]"
									using = State_Title_MouseEntry
								}
								expand = {}
								
								Entitled_set_title_buttons = {}
							}
							hbox = {
								spacer = {
									size = { 20 0 }
								}
								vbox = {
									visible = "[GetVariableSystem.HasValue('empire',Scope.Title.GetKey)]"
									datamodel = "[Scope.GetList('de_jure')]"
									item = {
										vbox = {
											name = "kingdom"
											spacing = 10
											hbox = {
												datacontext = "[Scope.Title]"
												layoutpolicy_horizontal = expanding
												button_group = {
													# onclick = "[CountyGroup.ToggleExpanded]"
													layoutpolicy_horizontal = expanding

													flowcontainer = {
														spacing = 5
														widget = {
															size = { 18 22 }
															button_expand = {
																frame = "[Select_int32( GetVariableSystem.HasValue('kingdom',Scope.Title.GetKey), '(int32)2', '(int32)1' )]"
																parentanchor = center
															}
														}
													}
													
													onclick = "[GetVariableSystem.SetOrToggle('kingdom',Scope.Title.GetKey)]"
												}
												button_multi = {
													name = "custom_title"
													layoutpolicy_horizontal = expanding
													size = { 290 60 }
													
													coa_title_tiny_crown = {
														datacontext = "[Scope.Title]"
													}
													text = "[Scope.Title.GetName]"
													margin = { 60 0 }
													
													onclick = "[GetVariableSystem.SetOrToggle('kingdom',Scope.Title.GetKey)]"
													using = State_Title_MouseEntry
												}
												expand = {}
												Entitled_set_title_buttons = {}
											}
											hbox = {
												spacer = {
													size = { 20 0 }
												}
												vbox = {
													visible = "[GetVariableSystem.HasValue('kingdom',Scope.Title.GetKey)]"
													datamodel = "[Scope.GetList('de_jure')]"
													item = {
														vbox = {
															name = "duchy"
															spacing = 10
															hbox = {
																datacontext = "[Scope.Title]"
																button_group = {
																	# onclick = "[CountyGroup.ToggleExpanded]"
																	layoutpolicy_horizontal = expanding

																	flowcontainer = {
																		spacing = 5
																		widget = {
																			size = { 18 22 }
																			button_expand = {
																				frame = "[Select_int32( GetVariableSystem.HasValue('duchy',Scope.Title.GetKey), '(int32)2', '(int32)1' )]"
																				parentanchor = center
																			}
																		}
																	}
																	
																	onclick = "[GetVariableSystem.SetOrToggle('duchy',Scope.Title.GetKey)]"
																	using = State_Title_MouseEntry
																}
																button_multi = {
																	name = "custom_title"
																	layoutpolicy_horizontal = expanding
																	size = { 270 60 }
																	
																	coa_title_tiny_crown = {
																		datacontext = "[Scope.Title]"
																	}
																	text = "[Scope.Title.GetName]"
																	margin = { 60 0 }

																	onclick = "[GetVariableSystem.SetOrToggle('duchy',Scope.Title.GetKey)]"
																}
																expand = {}
																Entitled_set_title_buttons = {}
															}
															hbox = {
																spacer = {
																	size = { 20 0 }
																}
																vbox = {
																	spacing = 10
																	margin_bottom = 10
																	visible = "[GetVariableSystem.HasValue('duchy',Scope.Title.GetKey)]"
																	datamodel = "[Scope.GetList('de_jure')]"
																	item = {
																		vbox = {
																			hbox = {
																				datacontext = "[Scope.Title]"
																				spacer = { size = { 18 0 }}
																				button_multi = {
																					name = "custom_title"
																					layoutpolicy_horizontal = expanding
																					size = { 250 60 }
													
																					coa_title_tiny_crown = {
																						datacontext = "[Scope.Title]"
																					}
																					text = "[Scope.Title.GetName]"
																					margin = { 60 0 }
																					using = State_Title_MouseEntry
																				}
																				expand = {}
																				Entitled_set_title_buttons = {}
																			}
																		}
																	}
																	# spacer = {
																	# 	size = { 0 0 }
																	# }
																}
															}
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
					expand = {}
				}
				expand = {}
			}
			
			scrollbar_vertical = {
				using = Scrollbar_Vertical
			}
			expand = {}
		}
		expand = {}
	}
}

window = {
	visible = "[GetVariableSystem.HasValue('Entitled','title')]"
	name = "Entitled_custom_title_detail"
	widgetid = "Entitled_custom_title_detail"
	parentanchor = top|right
	allow_outside = yes
	movable = no
	layer = windows_layer

	using = Window_Size_MainTab
	# using = Window_Background_Sidebar

	state = {
		name = _show
		using = Animation_FadeIn_Quick
		using = Sound_WindowShow_Standard
		using = Window_Position_MainTab
	}

	state = {
		name = _hide
		using = Animation_FadeOut_Quick
		using = Sound_WindowHide_Standard
		using = Window_Position_MainTab_Hide
	}

	state = {
		name = dismiss
		next = _hide

		trigger_when = "[GetVariableSystem.Exists( 'hide_right_windows' )]"
	}

	margin_widget = {
		size = { 100% 100% }
		margin = { 0 26 }
		margin_right = 13

		### WINDOW CONTENT
		vbox = {
			using = Window_Margins

			header_pattern = {
				layoutpolicy_horizontal = expanding

				blockoverride "header_text"
				{
					text = "ENTITLED_WINDOW_TITLE"
				}

				blockoverride "button_close"
				{
					onclick = "[GetVariableSystem.Clear('Entitled')]"
					onclick = "[SetMapMode(  'realms' )]"
					# shortcut = "innovations_window"
				}

				blockoverride "button_back"
				{
					visible = "[HasViewHistory]"
					onclick = "[OpenFromViewHistory]"
					tooltip = "[GetViewHistoryTooltip]"
				}

				blockoverride "button_me"
				{
					visible = "[GetPlayer.IsValid]"
					# onclick = "[DefaultOnCharacterClick(GetPlayer.GetID)]"
				}

				# watch_window_button = {
				# 	size = { 60 40 }
				# 	onclick = "[AddWatchWindow( Culture.MakeScope )]"
				# }
			}
			vbox = {
				layoutpolicy_vertical = expanding
			}
		}
	}
}

window = {
	visible = "[GetVariableSystem.Exists('entitled_create_title_confirmation')]"
	name = "entitled_create_title_confirmation"
	widgetid = "entitled_create_title_confirmation"
	size = { 100% 100% }
	parentanchor = center
	resizable = no
	layer = confirmation

	# button = {
	# 	size = { 100% 100% }
	# 	onclick = "[JominiNotification.OnDecline]"
	# }

	widget = {
		parentanchor = center
		using = Window_Background_Popup
		alwaystransparent = no

		vbox = {
			size = { 500 200 }
			resizeparent = yes
			margin = { 10 10 }
	
			header_standard = {
				layoutpolicy_horizontal = expanding
	
				blockoverride "header_text"
				{
					raw_text = "Create Title"
	
				}
	
				blockoverride "button_close" {
					# visible = no
				}
			}
	
			scrollarea = {
				layoutpolicy_horizontal = expanding
				layoutpolicy_vertical = expanding
				minimumsize = { 470 400 }
				maximumsize = { 470 400 }

				scrollbarpolicy_horizontal = always_off

				scrollbar_vertical = {
					using = Scrollbar_Vertical
				}

				scrollwidget = {
					vbox = {
						layoutpolicy_horizontal = expanding
						margin = { 20 10 }
						spacing = 20
			
						text_multi = {
							# maximumsize = { 350 -1 }
							minimumsize = { 350 -1 }
							autoresize = yes
							multiline = yes
							align = left
							margin_top = 10
							margin_bottom = 20
							text = "[GetScriptedGui('Entitled_create_title').ExecuteTooltip(GuiScope.AddScope('title',GetGlobalVariable(Concatenate('custom_',GetVariableSystem.Get('title_rank'))).Title.MakeScope).End)]"
						}
				
						hbox = {
							layoutpolicy_horizontal = expanding
				
							button_standard = {
								raw_text = "Cancel"
								onclick = "[GetVariableSystem.Toggle('entitled_create_title_confirmation')]"
								shortcut = "close_window"
							}
				
							# expand = {
							# 	layoutpolicy_horizontal = expanding
							# 	visible = "[Or(JominiNotification.HasOnAccept, JominiNotification.HasOnDecline)]"
							# }
				
							button_primary = {
								raw_text = "Create Title"
								onclick = "[GetScriptedGui('Entitled_create_title').Execute(GuiScope.AddScope('title',GetGlobalVariable(Concatenate('custom_',GetVariableSystem.Get('title_rank'))).Title.MakeScope).End)]"
								onclick = "[GetVariableSystem.Clear('empire')]"
								onclick = "[GetVariableSystem.Clear('kingdom')]"
								onclick = "[GetVariableSystem.Clear('duchy')]"
								onclick = "[GetVariableSystem.Clear('capital_county')]"
								onclick = "[GetVariableSystem.Clear('title_rank')]"
								onclick = "[GetVariableSystem.Clear('Entitled')]"
								onclick = "[GetVariableSystem.Toggle('entitled_create_title_confirmation')]"
								onclick = "[GetScriptedGui('Entitled_clean').Execute(GuiScope.End)]"
								onclick = "[SetMapMode(  'realms' )]"
							}
						}
					}
				}
			}
		}
	}
}


types EntitledTypes {
	type Entitled_set_title_buttons = container {
		hbox = {
			visible = "[GetGlobalVariable('entitled_setup').IsSet]"
			spacing = 1
			margin_left = 5
			layoutpolicy_horizontal = expanding

			button_group = {
				button_icon = {
					size = { 30 30 }
					parentanchor = center
					texture = "gfx/interface/icons/flat_icons/copy.dds"
					down = "[EqualTo_string(Scope.Title.GetKey,GetVariableSystem.Get('copy_title'))]"
				}
				onclick = "[GetVariableSystem.Set('copy_title',Scope.Title.GetKey)]"
				onclick = "[GetScriptedGui('Entitled_copy_title').Execute(GuiScope.SetRoot(Scope.Title.MakeScope).End)]"
				tooltip = entitled_copy_title_tooltip
			}

			# button_group = {
			# 	visible = "[GetScriptedGui('Entitled_set_de_jure').IsShown(GuiScope.SetRoot(Scope.Title.MakeScope).AddScope('title_rank',MakeScopeFlag(GetVariableSystem.Get('title_rank'))).End)]"
			# 	enabled = "[GetScriptedGui('Entitled_set_de_jure').IsValid(GuiScope.SetRoot(Scope.Title.MakeScope).AddScope('title_rank',MakeScopeFlag(GetVariableSystem.Get('title_rank'))).End)]"
			# 	button_icon = {
			# 		size = { 30 30 }
			# 		parentanchor = center
			# 		texture = "gfx/de_jure.dds"
			# 	}
			# 	onclick = "[GetScriptedGui('Entitled_set_de_jure').Execute(GuiScope.SetRoot(Scope.Title.MakeScope).AddScope('title_rank',MakeScopeFlag(GetVariableSystem.Get('title_rank'))).End)]"
			# 	tooltip = entitled_set_de_jure_tooltip
			# }
			# button_group = {
			# 	visible = "[GetScriptedGui('Entitled_remove_de_jure').IsShown(GuiScope.SetRoot(Scope.Title.MakeScope).AddScope('title_rank',MakeScopeFlag(GetVariableSystem.Get('title_rank'))).End)]"
			# 	button_icon = {
			# 		down = "[GetScriptedGui('Entitled_remove_de_jure').IsShown(GuiScope.SetRoot(Scope.Title.MakeScope).AddScope('title_rank',MakeScopeFlag(GetVariableSystem.Get('title_rank'))).End)]"
			# 		size = { 30 30 }
			# 		parentanchor = center
			# 		texture = "gfx/de_jure.dds"
			# 	}
			# 	onclick = "[GetScriptedGui('Entitled_remove_de_jure').Execute(GuiScope.SetRoot(Scope.Title.MakeScope).AddScope('title_rank',MakeScopeFlag(GetVariableSystem.Get('title_rank'))).End)]"
			# 	tooltip = entitled_remove_de_jure_tooltip
			# }

			entitled_title_window_button = {
				visible = "[GetScriptedGui('Entitled_set_de_jure').IsShown(GuiScope.SetRoot(Scope.Title.MakeScope).AddScope('title_rank',MakeScopeFlag(GetVariableSystem.Get('title_rank'))).End)]"
				enabled = "[GetScriptedGui('Entitled_set_de_jure').IsValid(GuiScope.SetRoot(Scope.Title.MakeScope).AddScope('title_rank',MakeScopeFlag(GetVariableSystem.Get('title_rank'))).End)]"
				blockoverride "texture" {
					texture = "gfx/interface/icons/casus_bellis/de_jure_cb.dds"
				}
				onclick = "[GetScriptedGui('Entitled_set_de_jure').Execute(GuiScope.SetRoot(Scope.Title.MakeScope).AddScope('title_rank',MakeScopeFlag(GetVariableSystem.Get('title_rank'))).End)]"
				tooltip = entitled_set_de_jure_tooltip
			}
			entitled_title_window_button = {
				visible = "[GetScriptedGui('Entitled_remove_de_jure').IsShown(GuiScope.SetRoot(Scope.Title.MakeScope).AddScope('title_rank',MakeScopeFlag(GetVariableSystem.Get('title_rank'))).End)]"
				enabled = "[GetScriptedGui('Entitled_set_de_jure').IsValid(GuiScope.SetRoot(Scope.Title.MakeScope).AddScope('title_rank',MakeScopeFlag(GetVariableSystem.Get('title_rank'))).End)]"
				blockoverride "texture" {
					texture = "gfx/interface/icons/casus_bellis/de_jure_cb.dds"
				}
				onclick = "[GetScriptedGui('Entitled_remove_de_jure').Execute(GuiScope.SetRoot(Scope.Title.MakeScope).AddScope('title_rank',MakeScopeFlag(GetVariableSystem.Get('title_rank'))).End)]"
				tooltip = entitled_remove_de_jure_tooltip
				icon = {
					parentanchor = center
					size = { 30 30 }
					texture = "gfx/interface/icons/symbols/icon_cross.dds"
				}
			}

			# button_group = {
			# 	visible = "[GetScriptedGui('Entitled_add_to_realm').IsShown(GuiScope.SetRoot(Scope.Title.MakeScope).AddScope('title_rank',MakeScopeFlag(GetVariableSystem.Get('title_rank'))).End)]"
			# 	enabled = "[GetScriptedGui('Entitled_add_to_realm').IsValid(GuiScope.SetRoot(Scope.Title.MakeScope).AddScope('title_rank',MakeScopeFlag(GetVariableSystem.Get('title_rank'))).End)]"
			# 	button_icon = {
			# 		size = { 30 30 }
			# 		parentanchor = center
			# 		texture = "gfx/title.dds"
			# 	}
			# 	onclick = "[GetScriptedGui('Entitled_add_to_realm').Execute(GuiScope.SetRoot(Scope.Title.MakeScope).AddScope('title_rank',MakeScopeFlag(GetVariableSystem.Get('title_rank'))).End)]"
			# 	tooltip = entitled_add_to_realm_tooltip
			# }
			# button_group = {
			# 	visible = "[GetScriptedGui('Entitled_remove_from_realm').IsShown(GuiScope.SetRoot(Scope.Title.MakeScope).AddScope('title_rank',MakeScopeFlag(GetVariableSystem.Get('title_rank'))).End)]"
			# 	button_icon = {
			# 		down = "[GetScriptedGui('Entitled_remove_from_realm').IsShown(GuiScope.SetRoot(Scope.Title.MakeScope).AddScope('title_rank',MakeScopeFlag(GetVariableSystem.Get('title_rank'))).End)]"
			# 		size = { 30 30 }
			# 		parentanchor = center
			# 		texture = "gfx/title.dds"
			# 	}
			# 	onclick = "[GetScriptedGui('Entitled_remove_from_realm').Execute(GuiScope.SetRoot(Scope.Title.MakeScope).AddScope('title_rank',MakeScopeFlag(GetVariableSystem.Get('title_rank'))).End)]"
			# 	tooltip = entitled_remove_from_realm_tooltip
			# }

			entitled_title_window_button = {
				visible = "[GetScriptedGui('Entitled_add_to_realm').IsShown(GuiScope.SetRoot(Scope.Title.MakeScope).AddScope('title_rank',MakeScopeFlag(GetVariableSystem.Get('title_rank'))).End)]"
				enabled = "[GetScriptedGui('Entitled_add_to_realm').IsValid(GuiScope.SetRoot(Scope.Title.MakeScope).AddScope('title_rank',MakeScopeFlag(GetVariableSystem.Get('title_rank'))).End)]"
				blockoverride "texture" {
					texture = "gfx/interface/skins/iberian/hud_maintab/maintab_my_realm.dds"
				}
				onclick = "[GetScriptedGui('Entitled_add_to_realm').Execute(GuiScope.SetRoot(Scope.Title.MakeScope).AddScope('title_rank',MakeScopeFlag(GetVariableSystem.Get('title_rank'))).End)]"
				tooltip = entitled_add_to_realm_tooltip
			}
			entitled_title_window_button = {
				visible = "[GetScriptedGui('Entitled_remove_from_realm').IsShown(GuiScope.SetRoot(Scope.Title.MakeScope).AddScope('title_rank',MakeScopeFlag(GetVariableSystem.Get('title_rank'))).End)]"
				blockoverride "texture" {
					texture = "gfx/interface/skins/iberian/hud_maintab/maintab_my_realm.dds"
				}
				onclick = "[GetScriptedGui('Entitled_remove_from_realm').Execute(GuiScope.SetRoot(Scope.Title.MakeScope).AddScope('title_rank',MakeScopeFlag(GetVariableSystem.Get('title_rank'))).End)]"
				# onclick = "[GetScriptedGui('entitled_set_liege').Execute(GuiScope.End)]"
				tooltip = entitled_remove_from_realm_tooltip
				icon = {
					parentanchor = center
					size = { 30 30 }
					texture = "gfx/interface/icons/symbols/icon_cross.dds"
				}
			}

			entitled_title_window_button = {
				visible = "[GetScriptedGui('Entitled_add_holdings').IsShown(GuiScope.SetRoot(Scope.Title.MakeScope).AddScope('title_rank',MakeScopeFlag(GetVariableSystem.Get('title_rank'))).End)]"
				enabled = "[GetScriptedGui('Entitled_add_holdings').IsValid(GuiScope.SetRoot(Scope.Title.MakeScope).AddScope('title_rank',MakeScopeFlag(GetVariableSystem.Get('title_rank'))).End)]"
				blockoverride "texture" {
					texture = "gfx/interface/icons/icon_domain.dds"
				}
				onclick = "[GetScriptedGui('Entitled_add_holdings').Execute(GuiScope.SetRoot(Scope.Title.MakeScope).AddScope('title_rank',MakeScopeFlag(GetVariableSystem.Get('title_rank'))).End)]"
				# onclick = "[GetScriptedGui('entitled_set_liege').Execute(GuiScope.End)]"
				tooltip = entitled_add_to_holdings_tooltip
			}
			entitled_title_window_button = {
				visible = "[GetScriptedGui('Entitled_remove_holdings').IsShown(GuiScope.SetRoot(Scope.Title.MakeScope).AddScope('title_rank',MakeScopeFlag(GetVariableSystem.Get('title_rank'))).End)]"
				blockoverride "texture" {
					texture = "gfx/interface/icons/icon_domain.dds"
				}
				onclick = "[GetScriptedGui('Entitled_remove_holdings').Execute(GuiScope.SetRoot(Scope.Title.MakeScope).AddScope('title_rank',MakeScopeFlag(GetVariableSystem.Get('title_rank'))).End)]"
				# onclick = "[GetScriptedGui('entitled_set_liege').Execute(GuiScope.End)]"
				tooltip = entitled_remove_from_holdings_tooltip
				icon = {
					parentanchor = center
					size = { 30 30 }
					texture = "gfx/interface/icons/symbols/icon_cross.dds"
				}
			}

			entitled_title_window_button = {
				visible = "[GreaterThan_CFixedPoint(Scope.Title.MakeScope.ScriptValue('entitled_title_tier'),'(CFixedPoint)2')]"
				enabled = "[GreaterThan_CFixedPoint(Scope.Title.MakeScope.ScriptValue('entitled_title_tier'),GetGlobalVariable('custom_title').Title.MakeScope.ScriptValue('entitled_title_tier'))]"
				blockoverride "texture" {
					texture = "gfx/interface/icons/icon_liege.dds"
				}
				onclick = "[GetScriptedGui('entitled_de_jure_liege_custom').Execute(GuiScope.SetRoot(Scope.Title.MakeScope).End)]"
				tooltip = ENTITLED_SET_DE_JURE_LIEGE_TOOLTIP
			}
			button_group = {
				visible = "[Scope.Title.IsCounty]"
				enabled = "[GetScriptedGui('Entitled_set_capital_county').IsValid(GuiScope.SetRoot(Scope.Title.MakeScope).End)]"
				button_icon = {
					size = { 30 30 }
					parentanchor = center
					texture = "gfx/interface/icons/flat_icons/move_capital.dds"
					down = "[GetScriptedGui('Entitled_set_capital_county').IsShown(GuiScope.SetRoot(Scope.Title.MakeScope).End)]"
				}
				onclick = "[GetScriptedGui('Entitled_set_capital_county').Execute(GuiScope.SetRoot(Scope.Title.MakeScope).End)]"
				# onclick = "[GetScriptedGui('entitled_set_liege').Execute(GuiScope.End)]"
				tooltip = entitled_set_capital_county_tooltip
			}
			

			expand = {}

		}

		hbox = {
			visible = "[GetVariableSystem.HasValue('Entitled_title_window','convert_faith')]"
			spacing = 5
			margin_left = 5
			layoutpolicy_horizontal = expanding
			entitled_title_window_button = {
				blockoverride "texture" {
					texture = "gfx/interface/icons/council_task_types/task_conversion.dds"
				}
				onclick = "[GetScriptedGui('entitled_convert_faith_counties').Execute(GuiScope.SetRoot(Scope.Title.MakeScope).End)]"
				onclick = "[GetScriptedGui('entitled_convert_faith_people').Execute(GuiScope.SetRoot(Scope.Title.MakeScope).End)]"
				onclick = "[PdxGuiTriggerAllAnimations('refresh_religion_mapmode')]"
				tooltip = ENTITLED_CONVERT_FAITH_ALL
			}
			entitled_title_window_button = {
				blockoverride "texture" {
					texture = "gfx/interface/icons/portraits/liege.dds"
				}
				onclick = "[GetScriptedGui('entitled_convert_faith_people').Execute(GuiScope.SetRoot(Scope.Title.MakeScope).End)]"
				onclick = "[PdxGuiTriggerAllAnimations('refresh_religion_mapmode')]"
				tooltip = ENTITLED_CONVERT_FAITH_RULERS
			}
			entitled_title_window_button = {
				blockoverride "texture" {
					texture = "gfx/interface/icons/icon_domain.dds"
				}
				onclick = "[GetScriptedGui('entitled_convert_faith_counties').Execute(GuiScope.SetRoot(Scope.Title.MakeScope).End)]"
				onclick = "[PdxGuiTriggerAllAnimations('refresh_religion_mapmode')]"
				tooltip = ENTITLED_CONVERT_FAITH_COUNTIES
			}
			button_icon = {
				texture = "gfx/interface/icons/flat_icons/revert.dds"
				onclick = "[GetScriptedGui('entitled_revert_faith_counties').Execute(GuiScope.SetRoot(Scope.Title.MakeScope).End)]"
				onclick = "[PdxGuiTriggerAllAnimations('refresh_religion_mapmode')]"
				tooltip = ENTITLED_REVERT_FAITH_COUNTIES
			}
			expand = {}
		}

		hbox = {
			visible = "[GetVariableSystem.HasValue('Entitled_title_window','convert_culture')]"
			spacing = 5
			margin_left = 5
			layoutpolicy_horizontal = expanding
			entitled_title_window_button = {
				blockoverride "texture" {
					texture = "gfx/interface/icons/council_task_types/task_accept_culture.dds"
				}
				# onclick = "[PdxGuiWidget.InterruptThenTriggerAnimation('refresh_culture_mapmode','refresh_culture_mapmode')]"
				onclick = "[GetScriptedGui('entitled_convert_culture_all').Execute(GuiScope.SetRoot(Scope.Title.MakeScope).End)]"
				# onclick = "[GetScriptedGui('entitled_convert_culture_people').Execute(GuiScope.SetRoot(Scope.Title.MakeScope).End)]"
				# onclick = "[PdxGuiTriggerAllAnimations('refresh_culture_mapmode')]"
				tooltip = ENTITLED_CONVERT_CULTURE_ALL
			}
			entitled_title_window_button = {
				blockoverride "texture" {
					texture = "gfx/interface/icons/portraits/liege.dds"
				}
				onclick = "[GetScriptedGui('entitled_convert_culture_people').Execute(GuiScope.SetRoot(Scope.Title.MakeScope).End)]"
				onclick = "[PdxGuiTriggerAllAnimations('refresh_culture_mapmode')]"
				tooltip = ENTITLED_CONVERT_CULTURE_RULERS
			}
			entitled_title_window_button = {
				blockoverride "texture" {
					texture = "gfx/interface/icons/icon_domain.dds"
				}
				onclick = "[GetScriptedGui('entitled_convert_culture_counties').Execute(GuiScope.SetRoot(Scope.Title.MakeScope).End)]"
				onclick = "[PdxGuiTriggerAllAnimations('refresh_culture_mapmode')]"
				tooltip = ENTITLED_CONVERT_CULTURE_COUNTIES
			}
			button_icon = {
				texture = "gfx/interface/icons/flat_icons/revert.dds"
				onclick = "[GetScriptedGui('entitled_revert_culture_counties').Execute(GuiScope.SetRoot(Scope.Title.MakeScope).End)]"
				onclick = "[PdxGuiTriggerAllAnimations('refresh_culture_mapmode')]"
				tooltip = ENTITLED_REVERT_CULTURE_COUNTIES
			}
			expand = {}
		}
	}

	type button_multi = button_normal
    {
        texture = "gfx/interface/buttons/button_standard.dds"
        size = { 170 33 }

        gfxtype = togglepushbuttongfx
        effectname = "NoHighlight"

        upframe = 1
        uphoverframe = 2
        uppressedframe = 3
        downframe = 4
        downhoverframe = 4
        downpressedframe = 4
        disableframe = 7

        spriteType = Corneredtiled
        spriteborder = { 4 4 }
        framesize = { 252 80 }

        buttonText = {
			textbox = {
				size = { 100% 100% }
                autoresize = no
                margin = { 10 0 }
                align = center|nobaseline
                # default_format = "#clickable"
                alwaystransparent = yes
				using = Font_Type_Standard
				using = Font_Size_Small
				# autoresize = yes
				elide = right
				#   text = "DEFAULT_TEXT"
				default_format = "#medium"
				# alwaystransparent = no
				fontsize_min = 12
				multiline = yes
			}
        }

        modify_texture = {
            name = "overlay"
            texture = "gfx/interface/buttons/button_standard_overlay.dds"
            spriteType = Corneredstretched
            spriteborder = { 3 3 }
            blend_mode = overlay
            alpha = 0.3
        }

        block "disabled"
        {
            highlight_icon = {
                size = { 100% 100% }
                gfxtype = togglepushbuttongfx
                effectname = "NoHighlight"
                texture = "gfx/interface/buttons/button_disabled_stripes.dds"
                spriteType = Corneredtiled
                spriteborder = { 2 2 }
                framesize  = { 238 63 }

                upframe = 1
                uphoverframe = 1
                uppressedframe = 1
                downframe = 1
                downhoverframe = 1
                downpressedframe = 1
                disableframe = 2

                alpha = 0.4

                modify_texture = {
                    name = "overlay"
                    texture = "gfx/interface/buttons/button_standard_overlay.dds"
                    spriteType = Corneredstretched
                    spriteborder = { 3 3 }
                    blend_mode = overlay
                }

                block "button_standard_mouseover" {}
            }
        }

        highlight_icon = {
            size = { 100% 100% }
            gfxtype = togglepushbuttongfx
            effectname = "NoHighlight"
            texture = "gfx/interface/buttons/button_mouseover.dds"
            spriteType = Corneredstretched
            spriteborder = { 20 20 }
            framesize  = { 238 63 }

            upframe = 1
            uphoverframe = 2
            uppressedframe = 1
            downframe = 1
            downhoverframe = 1
            downpressedframe = 1
            disableframe = 1

            alpha = 0.5

            block "button_standard_mouseover" {}
        }

        margin_widget = {
            size = { 100% 100% }
            margin = { 3 3 }

            block "vignette"
            {
                icon = {
                    name = "vignette"
                    size = { 100% 100% }
                    alpha = 0.2
                    texture = "gfx/interface/component_masks/mask_vignette.dds"
                    color = { 0.15 0.15 0.15 1 }
                }
            }
        }
    }

	type entitled_header_pattern = header_pattern {
		layoutpolicy_horizontal = expanding
		blockoverride "button_close"
		{
			onclick = "[GetVariableSystem.Clear('Entitled')]"
			onclick = "[SetMapMode(  'realms' )]"
			# shortcut = "innovations_window"
		}

		blockoverride "button_back"
		{
			visible = "[HasViewHistory]"
			onclick = "[OpenFromViewHistory]"
			tooltip = "[GetViewHistoryTooltip]"
		}

		blockoverride "button_me"
		{
			visible = "[GetPlayer.IsValid]"
			# onclick = "[DefaultOnCharacterClick(GetPlayer.GetID)]"
		}

		hbox = {
			margin_left = 10
			button_icon = {
				size = { 30 30 }
				texture = "gfx/map_mode.dds"
				onclick = "[SetMapMode(  'baronies' )]"
				tooltip = ENTITLED_MAPMODE_TOOLTIP
				down = "[IsMapMode('baronies')]"
				enabled = "[Not(IsMapMode('baronies'))]"
			}
			button_icon = {
				size = { 30 30 }
				texture = "gfx/interface/icons/flat_icons/clear.dds"
				onclick = "[GetVariableSystem.Clear('Entitled')]"
				onclick = "[SetMapMode(  'realms' )]"
				onclick = "[GetVariableSystem.Clear('empire')]"
				onclick = "[GetVariableSystem.Clear('kingdom')]"
				onclick = "[GetVariableSystem.Clear('duchy')]"
				onclick = "[GetVariableSystem.Clear('capital_county')]"
				onclick = "[GetVariableSystem.Clear('title_rank')]"
				onclick = "[GetScriptedGui('Entitled_clean').Execute(GuiScope.End)]"
				tooltip = ENTITLED_CLEAR_TOOLTIP
			}
			expand = {}
		}
	}

	type entitled_title_window_button = button_group {
		datacontext = "[Scope.Title]"
		# visible = "[HasDlcFeature('royal_court')]"
		highlight_icon = {
			parentanchor = center
			# position = { 0 5 }
			size = { 30 30 }
			block "texture" {
				texture = "gfx/interface/icons/council_task_types/task_conversion.dds"
			}

			glow = {
				color = { 0 0 0 0.8 }
				glow_radius = 3
				using = Glow_Standard
			}
		}
		
		using = tooltip_se

		using = State_Title_MouseEntry
	}
}